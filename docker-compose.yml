version: "3.5"

networks:
    proxy:
        name: proxy
    nextcloud:
    authelia:
    wikijs:
    guacamole:
    exporters:
    # portus:
    grafana:
    loki:

volumes:
    nextcloud:
    jenkinsdata:
    portainer_data:
    transcoding:

services:
    # ###############################
    # #          Watchtower         #
    # ###############################
    # watchtower:
    #     image: containrrr/watchtower
    #     container_name: watchtower
    #     logging:
    #         driver: "loki"
    #         options:
    #             loki-url: "http://localhost:3100/loki/api/v1/push"
    #     command: -H tcp://dockerproxy:2375
    #     depends_on:
    #         - smtp
    #     networks:
    #         - proxy
    #     environment:
    #         - WATCHTOWER_MONITER_ONLY=true
    #         - WATCHTOWER_NOTIFICATIONS=email
    #         - WATCHTOWER_NOTIFICATION_EMAIL_FROM=notifications@${ROOT_DOMAIN}
    #         - WATCHTOWER_NOTIFICATION_EMAIL_TO=${NOTIFICATIONS_EMAIL:?Email required for Watchtower email notifications}
    #         - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp
    #         - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_TLS_SKIP_VERIFY=true
    #         - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
    #         - TZ
            
    ###############################
    #          Speedtest          #
    ###############################
    speedtest:
        image: henrywhitaker3/speedtest-tracker
        container_name: speedtest
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        volumes:
            - ${SERVICES_ROOT}/${SPEEDTEST_ROOT:-speedtest}:/config
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.speedtest.rule=Host(`speedtest.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.speedtest.entrypoints=secure"
            - "traefik.http.routers.speedtest.tls=true"

    ###############################
    #          SMTP               #
    ###############################
    smtp:
        image: boky/postfix
        container_name: smtp
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - proxy
        environment:
            - HOSTNAME=smtp
            - RELAYHOST=${SMTP_DOMAIN}:587
            - RELAYHOST_USERNAME=${SMTP_USERNAME}
            - RELAYHOST_PASSWORD=${SMTP_PASSWORD}
            - ALLOWED_SENDER_DOMAINS=${ROOT_DOMAIN}

    ###############################
    #          cAdvisor           #
    ###############################
    cadvisor:
        image: google/cadvisor
        container_name: cadvisor
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        networks:
            - exporters
        expose:
            - "8080"

    ###############################
    #          Prometheus         #
    ###############################

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - proxy
            - exporters
        volumes:
            - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prometheus.rule=Host(`metrics.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.prometheus.entrypoints=secure"
            - "traefik.http.routers.prometheus.middlewares=authelia@file"
            - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
            - "traefik.http.routers.prometheus.tls=true"

    node-exporter:
        image: prom/node-exporter
        container_name: node-exporter
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - exporters

    ###############################
    #          Grafana            #
    ###############################

    grafana:
        image: grafana/grafana
        container_name: grafana
        user: "472:472"
        networks:
            - proxy
            - grafana
        environment:
            - LDAP_LOGIN_BASE
            - LDAP_ADMIN_PASSWORD
            - GF_ANALYTICS_REPORTING_ENABLED=false
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD__FILE=/etc/secrets/grafana/admin
            - GF_REMOTE_CACHE_TYPE=redis
            - GF_REMOTE_CACHE_CONNSTR=addr=grafana-cache:6379,pool_size=100,db=0,ssl=false
            - GF_AUTH_LDAP_ENABLED=true
            - GF_AUTH_LDAP_ALLOW_SIGN_UP=true
            - GF_AUTH_LDAP_CONFIG_FILE=/etc/grafana/ldap.toml
            - GF_SMTP_ENABLED=true
            - GF_SMTP_HOST=smtp:587
            - GF_SMTP_FROM_ADDRESS=notifications@${ROOT_DOMAIN}
            - GF_SMTP_FROM_NAME=Grafana
            - GF_SMTP_EHLO_INDENTITY=graphs.${ROOT_DOMAIN}
            - GF_DATABASE_TYPE=postgres
            - GF_DATABASE_HOST=grafana-db:5432
            - GF_DATABASE_USER=grafana
            - GF_DATABASE_NAME=grafana
            - GF_DATABASE_PASSWORD__FILE=/etc/secrets/grafana/postgres_password
            - GF_DATABASE_SSL_MODE=disable
        volumes:
            - ${SERVICES_ROOT}/${GRAFANA_ROOT:-grafana}:/var/lib/grafana
            - ./configs/grafana/ldap.toml:/etc/grafana/ldap.toml
            - ./configs/grafana/provisioning:/etc/grafana/provisioning
            - ./configs/grafana/dashboards:/var/lib/grafana/dashboards
            - ./configs/grafana/plugins:/var/lib/grafana/plugins
            - ./configs/grafana/secrets:/etc/secrets/grafana:ro
            - ./configs/openldap/secrets:/etc/secrets/openldap:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.rule=Host(`graphs.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.grafana.entrypoints=secure"
            - "traefik.http.services.grafana.loadbalancer.server.port=3000"
            - "traefik.http.routers.grafana.tls=true"

    grafana-cache:
        image: redis:alpine
        container_name: grafana-cache
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - TZ
        expose:
            - 6379
        restart: unless-stopped
        networks:
            - grafana

    grafana-db:
        image: postgres:12-alpine
        container_name: grafana-db
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        expose:
            - 5432
        networks:
            - grafana
        environment:
            - POSTGRES_DB=grafana
            - POSTGRES_USER=grafana
            - POSTGRES_PASSWORD_FILE=/etc/secrets/postgres_password
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${GRAFANA_ROOT:-grafana}/db:/var/lib/postgresql/data
            - ./configs/grafana/secrets:/etc/secrets:ro

    # ###############################
    # #     docker-socket-proxy     #
    # ###############################

    dockerproxy:
        image: tecnativa/docker-socket-proxy
        container_name: dockerproxy
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        environment:
            - POST=1
            - BUILD=1
            - CONTAINERS=1
            - EXEC=1
            - IMAGES=1
            - INFO=1
            - NETWORKS=1
            - SESSION=1
            - SWARM=1
            - SYSTEM=1
            - VOLUMES=1
            - TZ
        networks:
            - proxy
        expose:
            - 2375
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"

    ###############################
    #           Portainer         #
    ###############################
    # # # https://github.com/portainer/portainer/issues/3125
    portainer:
        image: portainer/portainer
        container_name: portainer
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        command: -H tcp://dockerproxy:2375
        restart: unless-stopped
        networks:
            - proxy
        volumes:
            - ${SERVICES_ROOT}/${PORTAINER_ROOT:-portainer}:/data
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.rule=Host(`containers.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.portainer.entrypoints=secure"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"
            - "traefik.http.routers.portainer.tls=true"

    # ###############################
    # #           Authelia          #
    # ###############################

    authelia:
        image: authelia/authelia
        container_name: authelia
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        depends_on:
            - authelia-cache
            - authelia-db
        volumes:
            - ${SERVICES_ROOT}/${AUTHELIA_ROOT:-authelia}/core:/var/lib/authelia
            - ./configs/authelia/configuration.yml:/etc/authelia/configuration.yml:ro
            - ./configs/authelia/secrets:/etc/secrets/authelia:ro
            - ./configs/openldap/secrets:/etc/secrets/openldap:ro
        expose:
            - 9091
        networks:
            - proxy
            - authelia
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.authelia.rule=Host(`logins.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.authelia.entrypoints=secure"
            - "traefik.http.routers.authelia.tls=true"
        restart: unless-stopped
        environment:
            - AUTHELIA_SESSION_SECRET_FILE=/etc/secrets/authelia/session
            - AUTHELIA_JWT_SECRET_FILE=/etc/secrets/authelia/jwt_secret
            - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE=/etc/secrets/openldap/admin_password
            - AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE=/etc/secrets/authelia/postgres_password
            - TZ

    authelia-cache:
        image: redis:alpine
        container_name: authelia-cache
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - TZ
        expose:
            - 6379
        restart: unless-stopped
        networks:
            - authelia

    authelia-db:
        image: postgres:12-alpine
        container_name: authelia-db
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        expose:
            - 5432
        networks:
            - authelia
        environment:
            - POSTGRES_DB=authelia
            - POSTGRES_USER=authelia
            - POSTGRES_PASSWORD_FILE=/etc/secrets/postgres_password
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${AUTHELIA_ROOT:-authelia}/db:/var/lib/postgresql/data
            - ./configs/authelia/secrets:/etc/secrets:ro

    ###############################
    #           Traefik           #
    ###############################

    traefik:
        image: traefik:latest
        container_name: traefik
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - TZ
        env_file:
            - .env
            - configs/traefik/providers.env
        command:
            - --certificatesresolvers.le.acme.email=${NOTIFICATIONS_EMAIL:?Please supply LetsEncrypt with an email}
        labels:
            - "traefik.enable=true"
        networks:
            - proxy
        ports:
            - "${TRAEFIK_HTTP_PORT:-80}:80"
            - "${TRAEFIK_HTTPS_PORT:-443}:443"
        volumes:
            - ./configs/traefik/static.yml:/traefik.yml
            - ./configs/traefik/dynamic.yml:/dynamic.yml
            - ${SERVICES_ROOT}/${TRAEFIK_ROOT:-traefik}/le:/le

    ###############################
    #           OpenLDAP          #
    ###############################

    openldap:
        image: osixia/openldap:1.3.0
        container_name: openldap
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - LDAP_RFC2307BIS_SCHEMA=true
            - LDAP_ORGANISATION
            - LDAP_DOMAIN=${ROOT_DOMAIN}
            - LDAP_ADMIN_PASSWORD
            - LDAP_CONFIG_PASSWORD
            - LDAP_BASE_DN=${LDAP_LOGIN_BASE}
            - LDAP_READONLY_USER=true
            - LDAP_READONLY_USER_USERNAME=readonly
            - LDAP_READONLY_USER_PASSWORD
            - LDAP_TLS_ENFORCE=false
            - TZ
        volumes:
            - ./configs/openldap/seeds:/container/service/slapd/assets/config/bootstrap/ldif/custom
            - ${SERVICES_ROOT}/${OPENLDAP_ROOT:-openldap}/db:/var/lib/ldap
            - ${SERVICES_ROOT}/${OPENLDAP_ROOT:-openldap}/config:/etc/ldap/slapd.d
        ports:
            - "389:389"
            - "636:636"
        networks:
            - proxy
        command: --copy-service

    ###############################
    #       PHPLDAPAdmin          #
    ###############################

    phpldapadmin:
        image: osixia/phpldapadmin
        container_name: phpldapadmin
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        hostname: admin.${ROOT_DOMAIN}
        networks:
            - proxy
        environment:
            PHPLDAPADMIN_HTTPS: "false"
            PHPLDAPADMIN_LDAP_HOSTS: "#PYTHON2BASH:[
                {'openldap': [
                {'server': [{'tls': False}]},
                {'login': [
                {'bind_id': 'cn=admin,${LDAP_LOGIN_BASE}'},
                {'bind_pass': '${LDAP_ADMIN_PASSWORD}'},
                {'attr': 'cn'}
                ]
                }]}]"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.phpldapadmin.rule=Host(`admin.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.phpldapadmin.entrypoints=secure"
            - "traefik.http.routers.phpldapadmin.middlewares="
            - "traefik.http.routers.phpldapadmin.tls=true"

    ###############################
    #           Loki              #
    ###############################
    loki:
        image: grafana/loki:latest
        container_name: loki
        logging:
          driver: "none"
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
        networks:
            - proxy
            - loki

    ###############################
    #           Nextcloud         #
    ###############################
    nextcloud-server:
        image: nginx:alpine
        restart: unless-stopped
        container_name: nextcloud-server
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        depends_on:
            - nextcloud-data
        volumes:
            - nextcloud:/var/www/html:ro
            - ./configs/nextcloud/nginx.conf:/etc/nginx/nginx.conf:ro
            - ${NEXTCLOUD_DATA}:/var/www/html/data
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/config:/var/www/html/config
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/custom_apps:/var/www/html/custom_apps
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/themes:/var/www/html/themes
        environment:
            - TZ
        networks:
            - proxy
            - nextcloud
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
            - "traefik.http.middlewares.nextcloud-caldav.redirectregex.permanent=true"
            - "traefik.http.middlewares.nextcloud-caldav.redirectregex.regex=^https://(.*)/.well-known/(card|cal)dav"
            - "traefik.http.middlewares.nextcloud-caldav.redirectregex.replacement=https://$${1}/remote.php/dav/"
            - "traefik.http.routers.nextcloud.middlewares=nextcloud-caldav@docker"
            - "traefik.http.routers.nextcloud.entrypoints=secure"
            - "traefik.http.routers.nextcloud.rule=Host(`cloud.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.nextcloud.tls=true"

    nextcloud-data:
        image: nextcloud:18-fpm-alpine
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        container_name: nextcloud
        networks:
            - proxy
            - nextcloud
        depends_on:
            - nextcloud-db
            - nextcloud-cache
        volumes:
            - nextcloud:/var/www/html
            - ${NEXTCLOUD_DATA}:/var/www/html/data
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/config:/var/www/html/config
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/custom_apps:/var/www/html/custom_apps
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/themes:/var/www/html/themes
        environment:
            - NEXTCLOUD_ADMIN_USER
            - NEXTCLOUD_ADMIN_PASSWORD
            - POSTGRES_USER=nextcloud
            - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
            - POSTGRES_HOST=nextcloud-db
            - POSTGRES_DB=nextcloud
            - NEXTCLOUD_HOSTNAME=cloud.${ROOT_DOMAIN}
            - NEXTCLOUD_TRUSTED_DOMAINS=cloud.${ROOT_DOMAIN} ${ROOT_DOMAIN} localhost
            - OVERWRITEPROTOCOL=https
            - REDIS_HOST=nextcloud-cache
            - SMTP_HOST=smtp
            - SMTP_AUTH_TYPE=NONE
            - SMTP_PORT=587
            - MAIL_FROM_ADDRESS=notifications@${ROOT_DOMAIN}
            - TZ

    nextcloud-db:
        image: postgres:12-alpine
        container_name: nextcloud-db
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - nextcloud
        environment:
            - POSTGRES_DB=nextcloud
            - POSTGRES_USER=nextcloud
            - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${NEXTCLOUD_ROOT:-nextcloud}/db:/var/lib/postgresql/data

    nextcloud-cache:
        image: redis:alpine
        container_name: nextcloud-cache
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        environment:
            - TZ
        networks:
            - nextcloud

    ###############################
    #           Emby              #
    ###############################
    emby:
        image: emby/embyserver
        container_name: emby
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - UID=${UID}
            - GID=${GID}
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${EMBY_ROOT:-emby}/transcoding:/transcoding
            - ${SERVICES_ROOT}/${EMBY_ROOT:-emby}/media:/media:ro
            - ${SERVICES_ROOT}/${EMBY_ROOT:-emby}/config:/config
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.emby.loadbalancer.server.port=8096"
            - "traefik.http.routers.emby.rule=Host(`emby.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.emby.tls=true"
            - "traefik.http.routers.emby.entrypoints=secure"

    ###############################
    #           EmbyStats         #
    ###############################
    embystats:
        image:  uping/embystat:beta
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        container_name: embystats
        volumes:
            - ${SERVICES_ROOT}/${EMBYSTATS_ROOT:-embystats}/config:/app/config
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.embystats.loadbalancer.server.port=6555"
            - "traefik.http.routers.embystats.rule=Host(`mediastats.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.embystats.entrypoints=secure"
            - "traefik.http.routers.embystats.middlewares=authelia@file"
            - "traefik.http.routers.embystats.tls=true"

    # ###############################
    # #           Jellyfin          #
    # ###############################
    # jellyfin:
    #     image: jellyfin/jellyfin
    #     container_name: jellyfin
    #     logging:
    #         driver: "loki"
    #         options:
    #             loki-url: "http://localhost:3100/loki/api/v1/push"
    #     restart: unless-stopped
    #     networks:
    #         - proxy
    #     volumes:
    #         - ${MOVIES_ROOT}:/media/movies:ro
    #         - ${TV_ROOT}:/media/tv:ro
    #         - ${SERVICES_ROOT}/${JELLYFIN_ROOT:-jellyfin}/config:/config
    #     environment:
    #         - TZ
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    #         - "traefik.http.routers.jellyfin.rule=Host(`media.${ROOT_DOMAIN}`)"
    #         - "traefik.http.routers.jellyfin.entrypoints=secure"
    #         - "traefik.http.routers.jellyfin.tls=true"

    # ###############################
    # #           Gitlab            #
    # ###############################
    # gitlab:
    #     image: 'gitlab/gitlab-ce:latest'
    #     hostname: 'git.${ROOT_DOMAIN}'
    #     container_name: gitlab
    #     logging:
    #         driver: "loki"
    #         options:
    #             loki-url: "http://localhost:3100/loki/api/v1/push"
    #     environment:
    #         - GITLAB_OMNIBUS_CONFIG="external_url 'https://git.${ROOT_DOMAIN}'"
    #         - USER_UID=${UID}
    #         - USER_GID=${GID}
    #         - TZ
    #     restart: unless-stopped
    #     networks:
    #         - proxy
    #     volumes:
    #         - ${SERVICES_ROOT}/${GITLAN_ROOT:-gitlab}/config:/etc/gitlab
    #         - ${SERVICES_ROOT}/${GITLAN_ROOT:-gitlab}/data:/var/opt/gitlab
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.routers.gitlab.rule=Host(`git.${ROOT_DOMAIN}`)"
    #         - "traefik.http.routers.gitlab.entrypoints=secure"
    #         - "traefik.http.routers.gitlab.service=gitlab-web-svc"
    #         - "traefik.http.services.gitlab-web-svc.loadbalancer.server.port=80"
    #         - "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"
    #         - "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
    #         - "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh-svc"
    #         - "traefik.tcp.services.gitlab-ssh-svc.loadbalancer.server.port=22"
    #         - "traefik.http.routers.gitlab.tls=true"

    ###############################
    #           Portus            #
    ###############################
    # portus:
    #     image: opensuse/portus:2.4
    #     container_name: portus
    #     logging:
    #         driver: "loki"
    #         options:
    #             loki-url: "http://localhost:3100/loki/api/v1/push"
    #     restart: unless-stopped
    #     environment:
    #         - PORTUS_CHECK_SSL_USAGE_ENABLED=false
    #         - PORTUS_SECRET_KEY_BASE
    #         - PORTUS_PASSWORD
    #         - PORTUS_KEY_PATH=/certificates/portus.key
    #         - CCONFIG_PREFIX=PORTUS
    #         - RAILS_SERVE_STATIC_FILES=true
    #         - PORTUS_EMAIL_FROM=notifications@${ROOT_DOMAIN}
    #         - PORTUS_EMAIL_NAME=Portus
    #         - PORTUS_EMAIL_REPLY_TO=notifications@${ROOT_DOMAIN}
    #         - PORTUS_EMAIL_SMTP_ENABLED=true
    #         - PORTUS_EMAIL_SMTP_ADDRESS=smtp
    #         - PORTUS_EMAIL_SMTP_DOMAIN=${ROOT_DOMAIN}
    #         - PORTUS_EMAIL_SMTP_PORT=587
    #         - PORTUS_LDAP_ENABLED=true
    #         - PORTUS_LDAP_HOSTNAME=openldap
    #         - PORTUS_LDAP_PORT=389
    #         - PORTUS_LDAP_UID=uid
    #         - PORTUS_LDAP_BASE=ou=people,${LDAP_LOGIN_BASE}
    #         - PORTUS_LDAP_AUTHENTICATION_ENABLED=true
    #         - PORTUS_LDAP_AUTHENTICATION_BIND_DN=cn=admin,${LDAP_LOGIN_BASE}
    #         - PORTUS_LDAP_AUTHENTICATION_PASSWORD=${LDAP_ADMIN_PASSWORD}
    #         - PORTUS_LDAP_GROUP_BASE=cn=dev,ou=groups,${LDAP_LOGIN_BASE}
    #         - PORTUS_LDAP_GUESS_EMAIL_ENALBED=true
    #         - PORTUS_LDAP_GUESS_EMAIL_ATTR=mail
    #         - PORTUS_DB_HOST=portus-db
    #         - PORTUS_DB_DATABASE=portus
    #         - PORTUS_DB_USERNAME=portus
    #         - PORTUS_DB_PASSWORD
    #         - PORTUS_MACHINE_FQDN_VALUE=registry.${ROOT_DOMAIN}
    #         - TZ
    #     networks:
    #         - proxy
    #         - portus
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.routers.portus.rule=Host(`registry.${ROOT_DOMAIN}`)"
    #         - "traefik.http.services.portus.loadbalancer.server.port=3000"
    #         - "traefik.http.routers.portus.entrypoints=secure"
    #         - "traefik.http.routers.portus.middlewares="
    #         - "traefik.http.routers.portus.tls=true"
    # portus-db:
    #     image: linuxserver/mariadb
    #     container_name: portus-db
    #     logging:
    #         driver: "loki"
    #         options:
    #             loki-url: "http://localhost:3100/loki/api/v1/push"
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - MYSQL_ROOT_PASSWORD=${PORTUS_DB_ADMIN_PASSWORD:?Admin password for portus-db must be set!}
    #         - MYSQL_DATABASE=portus
    #         - MYSQL_USER=portus
    #         - MYSQL_PASSWORD=${PORTUS_DB_PASSWORD:?User password for portus must be set!}
    #         - TZ
    #     volumes:
    #         - ${SERVICES_ROOT}/${PORTUS_ROOT:-portus}/db:/config
    #     networks:
    #         - portus
    #     restart: unless-stopped

    ###############################
    #           Wiki.js           #
    ###############################
    wikijs:
        image: requarks/wiki
        container_name: wikijs
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - DB_TYPE=postgres
            - DB_PORT=5432
            - DB_HOST=wikijs-db
            - DB_NAME=wikijsapp
            - DB_USER=wikijs
            - DB_PASS=${WIKIJS_DB_PASSWORD}
        volumes:
            - ${SERVICES_ROOT}/${WIKIJS_ROOT:-wikijs}/config:/config
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.wikijs.rule=Host(`wiki.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.wikijs.entrypoints=secure"
            - "traefik.http.routers.wikijs.tls=true"
            - "treafik.http.services.wikijs.loadbalancer.server.port=3000"
        networks:
            - proxy
            - wikijs
        depends_on:
            - wikijs-db

    wikijs-db:
        image: postgres:12-alpine
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        container_name: wikijs-db
        environment:
            - POSTGRES_DB=wikijsapp
            - POSTGRES_USER=wikijs
            - POSTGRES_PASSWORD=${WIKIJS_DB_PASSWORD:?User password for wikijs must be set!}
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${WIKIJS_ROOK:-wikijs}/db:/var/lib/postgresql/data
        networks:
            - wikijs
        restart: unless-stopped

    ##############################
    #          Organizr          #
    ##############################
    organizr:
        image: organizrtools/organizr-v2
        container_name: organizr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.organizr.rule=Host(`startpage.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.organizr.entrypoints=secure"
            - "traefik.http.routers.organizr.tls=true"
        volumes:
            - ${SERVICES_ROOT}/${ORGANIZR_ROOT:-organizr}/config:/config
            - ${SERVICES_ROOT}/${ORGANIZR_ROOT:-organizr}/db:/db
        restart: unless-stopped

    ###############################
    #           Ombi              #
    ###############################
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZD
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ombi.rule=Host(`requests.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.ombi.entrypoints=secure"
            - "traefik.http.routers.ombi.tls=true"
        volumes:
            - ${SERVICES_ROOT}/${OMBI_ROOT:-ombi}:/config
        restart: unless-stopped

    ###############################
    #        Calibre              #
    ###############################
    calibre-web:
        image: technosoft2000/calibre-web
        container_name: calibre-web
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - proxy
        environment:
            - PGID=1000
            - PUID=1000
            - USE_CONFIG_DIR=true
        expose:
            - 8083
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ${BOOKS_ROOT}:/books
            - ${SERVICES_ROOT}/${CALIBRE_WEB_ROOT:-calibre-web}/config:/calibre-web/config
            - ${SERVICES_ROOT}/${CALIBRE_WEB_ROOT:-calibre-web}/kindlegen:/calibre-web/kindlegen
            - ${SERVICES_ROOT}/${CALIBRE_WEB_ROOT:-calibre-web}/app:/calibre-web/app
            - ${SERVICES_ROOT}/${CALIBRE_WEB_ROOT:-calibre-web}/db:/calibre-web/db
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.calibre-web.rule=Host(`library.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.calibre-web.middlewares="
            - "traefik.http.routers.calibre-web.entrypoints=secure"
            - "traefik.http.services.calibre-web.loadbalancer.server.port=8083"
            - "traefik.http.routers.calibre-web.tls=true"

    ###############################
    #           Duplicati         #
    ###############################
    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${DUPLCATI_ROOT:-duplicati}/config:/config
            - ${SERVICES_ROOT}/${DUPLCATI_ROOT:-duplicati}/backups:/backups
            - ${SERVICES_ROOT}:/source
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.duplicati.rule=Host(`backup.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.duplicati.entrypoints=secure"
            - "traefik.http.routers.duplicati.middlewares=authelia@file"
            - "traefik.http.routers.duplicati.tls=true"
        restart: unless-stopped

    ###############################
    #         Guacamole           #
    ###############################
    # https://guacamole.apache.org/doc/gug/guacamole-docker.html
    guacamole:
        image: guacamole/guacamole
        container_name: guacamole
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - proxy
            - guacamole
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.guacamole.rule=Host(`desktop.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.guacamole.entrypoints=secure"
            - "traefik.http.services.guacamole.loadbalancer.server.port=8080"
            - "traefik.http.routers.guacamole.tls=true"
            - "traefik.http.routers.guacamole.middlewares=guacamole@file"
        environment:
            - LDAP_HOSTNAME=openldap
            - LDAP_PORT
            - LDAP_ENCRYPTION_METHOD
            - LDAP_USER_BASE_DN=ou=people,${LDAP_LOGIN_BASE}
            - LDAP_SEARCH_BIND_DN=cn=admin,${LDAP_LOGIN_BASE}
            - LDAP_SEARCH_BIND_PASSWORD=${LDAP_ADMIN_PASSWORD}
            - LDAP_USERNAME_ATTRIBUTE=uid
            - POSTGRES_DATABASE=guacamole
            - POSTGRES_HOSTNAME=guacamole-db
            - POSTGRES_USER=guacamole
            - POSTGRES_PASSWORD=${GUACAMOLE_DB_PASSWORD:?Guacamole db must have a password!}
            - GUACD_HOSTNAME=guacd

    guacd:
        image: guacamole/guacd
        container_name: guacd
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        expose:
            - 4822
        networks:
            - guacamole

    guacamole-db:
        image: postgres:12-alpine
        container_name: guacamole-db
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        networks:
            - guacamole
        environment:
            - POSTGRES_DB=guacamole
            - POSTGRES_USER=guacamole
            - POSTGRES_PASSWORD=${GUACAMOLE_DB_PASSWORD}
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${GUACAMOLE_ROOT:-guacamole}/db:/var/lib/postgresql/data

    ###############################
    #         Cyberchef           #
    ###############################
    cyberchef:
        image: mpepping/cyberchef
        restart: unless-stopped
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        container_name: cyberchef
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.cyberchef.rule=Host(`chef.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.cyberchef.entrypoints=secure"
            - "traefik.http.services.cyberchef.loadbalancer.server.port=8000"
            - "traefik.http.routers.cyberchef.tls=true"

    ###############################
    #         Radarr              #
    ###############################
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            - UMASK_SET=022 #optional
        volumes:
            - ${SERVICES_ROOT}/${RADARR_ROOT:-radarr}/config:/config
            - ${MOVIES_ROOT}:/movies
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.radarr.rule=Host(`radarr.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.radarr.entrypoints=secure"
            - "traefik.http.services.radarr.loadbalancer.server.port=7878"
            - "traefik.http.routers.radarr.middlewares=authelia@file"
            - "traefik.http.routers.radarr.tls=true"
        restart: unless-stopped

    ###############################
    #         Lidarr              #
    ###############################
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            - UMASK_SET=022 #optional
        volumes:
            - ${SERVICES_ROOT}/${LIDARR_ROOT:-lidarr}/config:/config
            - ${MUSIC_ROOT}:/music
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.lidarr.rule=Host(`lidarr.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.lidarr.entrypoints=secure"
            - "traefik.http.services.lidarr.loadbalancer.server.port=8686"
            - "traefik.http.routers.lidarr.middlewares=authelia@file"
            - "traefik.http.routers.lidarr.tls=true"
        restart: unless-stopped

    ###############################
    #         Sonarr              #
    ###############################
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            - UMASK_SET=022 #optional
        volumes:
            - ${SERVICES_ROOT}/${SONARR_ROOT:-sonarr}/config:/config
            - ${TV_ROOT}:/tv
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.rule=Host(`sonarr.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.sonarr.entrypoints=secure"
            - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
            - "traefik.http.routers.sonarr.middlewares=authelia@file"
            - "traefik.http.routers.sonarr.tls=true"
        restart: unless-stopped

    ###############################
    #         SABNZBD             #
    ###############################
    sabnzbd:
        build:
            context: ./configs/sabnzbd/build
        container_name: sabnzbd
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - WHITELISTED_DOMAIN=newsreader.${ROOT_DOMAIN}
            - PUID=1000
            - PGID=1000
            - TZ
        volumes:
            - ./configs/sabnzbd/sabnzbd.template:/config/sabnzbd.template
            - ${SERVICES_ROOT}/${SABNZBD_ROOT:-sabnzbd}/config:/config
            - ${SERVICES_ROOT}/${SABNZBD_ROOT:-sabnzbd}/intermediate:/incomplete-downloads
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sabnzbd.rule=Host(`newsreader.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.sabnzbd.entrypoints=secure"
            - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"
            - "traefik.http.routers.sabnzbd.middlewares=authelia@file"
            - "traefik.http.routers.sabnzbd.tls=true"
        restart: unless-stopped

    ###############################
    #         Syncthing           #
    ###############################
    syncthing:
        image: linuxserver/syncthing
        container_name: syncthing
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            - UMASK_SET=022
        volumes:
            - ${SERVICES_ROOT}/${SYNCTHING_ROOT:-syncthing}/config:/config
            - ${MOVIES_ROOT}:/movies
            - ${TV_ROOT}:/tv
            - ${BOOKS_ROOT}:/books
            - ${MUSIC_ROOT}:/music
            - ${DOWNLOADS_ROOT}:/downloads
            - ${TORRENTS_ROOT}:/blackhole
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.syncthing.rule=Host(`sync.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.syncthing.entrypoints=secure"
            - "traefik.http.services.syncthing.loadbalancer.server.port=8384"
            - "traefik.http.routers.syncthing.middlewares=authelia@file"
            - "traefik.http.routers.syncthing.tls=true"
        ports:
            - 22000:22000
            - 21027:21027/udp
        restart: unless-stopped

    ###############################
    #         Bazarr              #
    ###############################
    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
          - PUID=1000
          - PGID=1000
          - TZ
        volumes:
          - ${SERVICES_ROOT}/${BAZARR_ROOT:-bazzar}/config:/config
          - ${MOVIES_ROOT}:/movies
          - ${TV_ROOT}:/tv
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.bazarr.rule=Host(`bazarr.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.bazarr.entrypoints=secure"
            - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
            - "traefik.http.routers.bazarr.middlewares=authelia@file"
            - "traefik.http.routers.bazarr.tls=true"
        restart: unless-stopped

    # ##############################
    # #        Exportarr           #
    # ##############################
    # sonarr-exporter:
    #     image: onedr0p/exportarr:master
    #     container_name: sonarr-exporter
    #     restart: unless-stopped
    #     command: ["exportarr", "sonarr"]
    #     networks:
    #         - exporters
    #     environment:
    #         PORT: 9707
    #         URL: "http://sonarr:8989"
    #         APIKEY: ${SONARR_API_KEY}
    #         ENABLE_EPISODE_QUALITY_METRICS: "false"
    #         DISABLE_SSL_VERIFY: "true"
    #     expose:
    #         - 9707

    # radarr-exporter:
    #     image: onedr0p/exportarr:master
    #     container_name: radarr-exporter
    #     restart: unless-stopped
    #     command: ["exportarr", "radarr"]
    #     networks:
    #         - exporters
    #     environment:
    #         PORT: 9708
    #         URL: "http://radarr:7878"
    #         APIKEY: ${RADARR_API_KEY}
    #         DISABLE_SSL_VERIFY: "true"
    #     expose:
    #         - 9708

    ##############################
    #        Monitorr            #
    ##############################
    monitorr:
        image: monitorr/monitorr
        container_name: monitorr
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        restart: unless-stopped
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
        volumes:
            - ${SERVICES_ROOT}/${MONITORR_ROOT:-monitorr}:/app
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.monitorr.rule=Host(`monitorr.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.monitorr.entrypoints=secure"
            - "traefik.http.routers.monitorr.tls=true"

    ##############################
    #        LazyLibrian         #
    ##############################
    lazylibrarian:
        image: linuxserver/lazylibrarian
        container_name: lazylibrarian
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            - DOCKER_MODS=linuxserver/calibre-web:calibre #optional
        volumes:
            - ${SERVICES_ROOT}/${LAZYLIBRARIAN_ROOT:-lazylibrarian}/config:/config
            - ${DOWNLOADS_ROOT}:/downloads
            - ${BOOKS_ROOT}:/books
        restart: unless-stopped
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.lazylibrarian.rule=Host(`lazylibrarian.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.lazylibrarian.entrypoints=secure"
            - "traefik.http.routers.lazylibrarian.middlewares="
            - "traefik.http.services.lazylibrarian.loadbalancer.server.port=5299"
            - "traefik.http.services.lazylibrarian.loadbalancer.passHostHeader=true"
            - "traefik.http.routers.lazylibrarian.tls=true"

    ###############################
    #         Jackett             #
    ###############################
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        logging:
            driver: "loki"
            options:
                loki-url: "http://localhost:3100/loki/api/v1/push"
        networks:
            - proxy
        environment:
            - PUID=1000
            - PGID=1000
            - TZ
            # - RUN_OPTS=<run options here> #optional
        volumes:
            - ${SERVICES_ROOT}/${JACKETT_ROOT:-jackett}/config:/config
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.jackett.rule=Host(`jackett.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.jackett.entrypoints=secure"
            - "traefik.http.services.jackett.loadbalancer.server.port=9117"
            - "traefik.http.routers.jackett.middlewares=authelia@file"
            - "traefik.http.routers.jackett.tls=true"
        restart: unless-stopped

    ###############################
    #         qBittorrent          #
    ###############################
    qbittorrent:
        image: linuxserver/qbittorrent
        container_name: qbittorrent
        environment:
            - PUID=1000
            - PGID=1000
        networks:
            - proxy
        volumes:
            - ${SERVICES_ROOT}/${QBITTORRENT_ROOT:-qbittorrent}/config:/config
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.qbittorrent.rule=Host(`torrent.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.qbittorrent.entrypoints=secure"
            - "traefik.http.routers.qbittorrent.middlewares=authelia@file"
            - "traefik.http.routers.qbittorrent.tls=true"
            - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
        ports:
            - 6881:6881/udp
            - 6881:6881
        restart: unless-stopped
        
    ###############################
    #         nzbhydra            #
    ###############################
    nzbhydra:
        image: linuxserver/nzbhydra2
        container_name: nzbhydra
        environment:
            - PUID=1000
            - PGID=1000
        networks:
            - proxy
        volumes:
            - ${SERVICES_ROOT}/${NZBHYDRA_ROOT:-nzbhydra}/config:/config
            - ${TORRENTS_ROOT}:/blackhole
            - ${DOWNLOADS_ROOT}:/downloads
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${ROOT_DOMAIN}`)"
            - "traefik.http.routers.nzbhydra.entrypoints=secure"
            - "traefik.http.services.nzbhydra.loadbalancer.server.port=5076"
            - "traefik.http.routers.nzbhydra.middlewares=authelia@file"
            - "traefik.http.routers.nzbhydra.tls=true"
        restart: unless-stopped